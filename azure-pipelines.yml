# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: Default

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Sonar Cloud'
    organization: '210503-reston-net'
    scannerMode: 'MSBuild'
    projectKey: '210503-Reston-NET_West_Coasters_P2_FE'
    projectName: 'West_Coasters_P2_FE'
    extraProperties: |
      sonar.sourceEncoding=UTF-8
      sonar.exclusions=**/mode_modules/**,**/*.spec.ts
      sonar.tests=src
      sonar.test.inclusions=**/*spec.ts
      sonar.typescript.lcov.reportPaths=${Build.SourcesDirectory)/**/coverage/lcov.info
      sonar.typescript.exclusions=**/node_modules/**,**/typings.d.ts,**/main.ts,**/environments/environment*.ts, **/*routing.module.ts

- task: Npm@1
  displayName: Npm install latest angular globally
  inputs:
    command: 'custom'
    workingDir: 'HikePlannerFE'
    customCommand: 'install -g @angular/cli@latest'

- task: Npm@1
  displayName: Npm Install
  inputs:
    command: 'install'
    workingDir: 'HikePlannerFE'

- task: Npm@1
  displayName: Npm Run Build
  inputs:
    command: 'custom'
    workingDir: 'HikePlannerFE'
    customCommand: 'run build'

- task: Npm@1
  displayName: Npm Test
  inputs:
    command: 'custom'
    workingDir: 'HikePlannerFE'
    customCommand: 'test'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/HikePlannerFE/coverage/HikePlannerFE/cobertura.txt'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/TEST-*.xml'
- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/HikePlannerFE/dist/HikePlannerFE/'
    includeRootFolder: false
    archiveType: zip
    archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    replaceExistingArchive: true
    verbose: true

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(7db5a42a-1fa9-40a3-8da3-4ed5fb8c49cb)'
    appType: 'webAppLinux'
    WebAppName: 'hikeplanner'
    packageForLinux: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    RuntimeStack: 'NODE|12-lts'